# k8s/node-registration.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cynthus-container-manager
  namespace: default
spec:
  selector:
    matchLabels:
      app: cynthus-container-manager
  template:
    metadata:
      labels:
        app: cynthus-container-manager
    spec:
      containers:
      - name: container-manager
        image: gcr.io/google-containers/pause:3.2
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - /bin/sh
        - -c
        - |
          # Extract UUID from node name
          UUID=$(echo $NODE_NAME | sed 's/cynthus-compute-instance-//')
          
          # Pull and run the container if UUID exists
          if [ ! -z "$UUID" ]; then
            # Pull the image from cynthus-images registry
            docker pull ${var.region}-docker.pkg.dev/${var.project_id}/cynthus-images/$UUID:latest
            
            # Run the container
            docker run \
              --name ml-workload-$UUID \
              --restart always \
              ${var.region}-docker.pkg.dev/${var.project_id}/cynthus-images/$UUID:latest
          fi
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      nodeSelector:
        kubernetes.io/hostname: ${NODE_NAME}